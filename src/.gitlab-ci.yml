stages:
  - build
  - deploy

variables:
  IMAGE_TAG_LATEST: latest
  IMAGE_TAG_COMMIT: ${CI_COMMIT_SHORT_SHA}
  VERSION: ${CI_COMMIT_TAG}
  NAMESPACE: "diplom-site"
  DEPLOYMENT_NAME: "diplom-app"

build:
  stage: build
  image: gcr.io/kaniko-project/executor:v1.22.0-debug
  tags:
    - diplom
  only:
    - main
    - tags
  script:
    - echo "Building Docker image..."
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${DOCKER_REGISTRY}\":{\"username\":\"${DOCKER_USER}\",\"password\":\"${DOCKER_PASSWORD}\"}}}" > /kaniko/.docker/config.json
    - if [ -z "$VERSION" ]; then VERSION=$IMAGE_TAG_COMMIT; fi
    - /kaniko/executor --context ${CI_PROJECT_DIR} --dockerfile ${CI_PROJECT_DIR}/Dockerfile --destination ${DOCKER_USER}/${IMAGE_NAME}:$VERSION
    - /kaniko/executor --context ${CI_PROJECT_DIR} --dockerfile ${CI_PROJECT_DIR}/Dockerfile --destination ${DOCKER_USER}/${IMAGE_NAME}:${IMAGE_TAG_LATEST}

deploy:
  stage: deploy
  image: bitnami/kubectl:latest
  tags:
    - diplom
  only:
    - main
    - tags
  script:
    - echo "Deploying to Kubernetes..."
    - echo $KUBE_CONFIG | base64 -d > kubeconfig
    - export KUBECONFIG=kubeconfig
    - kubectl apply -f k8s/
    - if [ -z "$VERSION" ]; then VERSION=$IMAGE_TAG_COMMIT; fi
    - kubectl set image deployment/${DEPLOYMENT_NAME} ${IMAGE_NAME}=${DOCKER_USER}/${IMAGE_NAME}:$VERSION --namespace=${NAMESPACE}
    - kubectl rollout restart deployment/${DEPLOYMENT_NAME} --namespace=${NAMESPACE}
    - kubectl rollout status deployment/${DEPLOYMENT_NAME} --namespace=${NAMESPACE}
  when: on_success
